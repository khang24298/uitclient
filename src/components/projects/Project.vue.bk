<template>
  <div class="content-wrapper">
    <div class="ml-5 justify-center">
      <div class="min-h-screen flex overflow-x-scroll py-12 d-flex">
        <div
          v-for="(list,index) in tasksLists"
          :key="index"
          class="bg-gray-100 rounded-lg px-3 py-3 column-width rounded mr-4 "
        >
          <p class="text-gray-700 font-semibold font-sans tracking-wide text-sm">{{ list.status.name | uppercase }}</p>
          <!-- Draggable component comes from vuedraggable. It provides drag & drop functionality -->
          <draggable :animation="200" group="people" @start="drag=true" @end="drag=false">
              <task-card 
              v-for="item in list.tasks[0]"
              :key="item.id"
              :task="item"
              class="mt-3 cursor-move task"
              >
            </task-card>
          </draggable>
        </div>
      </div>
    </div>

  </div>
</template>
<script>
import draggable from "vuedraggable";
import TaskCard from "../tasks/TaskCard.vue";
// import TaskDetail from "../tasks/TaskDetail.vue";
export default {
  name: "Project",
  components: {
    TaskCard,
    draggable,
    // TaskDetail
  },
  data() {
    return {
      isShow: false,
      tasksLists: [Object],
      task: Object
    };
  },
  mounted () {
    this.axios.get(`http://uitwork/api/getTasksByProjectID/` + this.$route.params.id).then( res => this.tasksLists = res.data.tasksList)
  },
  methods: {
    
  }
}
</script>

<style scoped>
@import 'https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css';
.task{
  cursor: pointer;
  width: 14vw;
}

.column-width {
  min-width: 17vw;
  width: 18vw;
}
/* Unfortunately @apply cannot be setup in codesandbox, 
but you'd use "@apply border opacity-50 border-blue-500 bg-gray-200" here */
.ghost-card {
  opacity: 0.5;
  background: #F7FAFC;
  border: 1px solid #4299e1;
}
.d-flex{
  display: flex;
}
</style>